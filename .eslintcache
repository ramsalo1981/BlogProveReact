[{"C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\index.js":"1","C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\App.js":"2","C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\components\\Navbar\\Navebar.js":"3","C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\components\\Button\\Button.js":"4","C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\components\\pages\\Home.js":"5","C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\components\\HeroSection\\HeroSection.js":"6","C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\components\\Cards\\Cards.js":"7","C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\components\\Cards\\CardItem.js":"8","C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\components\\pages\\Categories.js":"9","C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\components\\pages\\Posts.js":"10","C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\components\\Category\\CategoryList.js":"11","C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\components\\Category\\Category.js":"12","C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\components\\Post\\PostList.js":"13","C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\components\\Post\\Post.js":"14"},{"size":181,"mtime":1612273152175,"results":"15","hashOfConfig":"16"},{"size":651,"mtime":1612211782764,"results":"17","hashOfConfig":"16"},{"size":2014,"mtime":1612142923702,"results":"18","hashOfConfig":"16"},{"size":695,"mtime":1612138212000,"results":"19","hashOfConfig":"16"},{"size":295,"mtime":1612207268375,"results":"20","hashOfConfig":"16"},{"size":888,"mtime":1612145752444,"results":"21","hashOfConfig":"16"},{"size":978,"mtime":1612209641024,"results":"22","hashOfConfig":"16"},{"size":604,"mtime":1612250829630,"results":"23","hashOfConfig":"16"},{"size":256,"mtime":1612252761471,"results":"24","hashOfConfig":"16"},{"size":217,"mtime":1612776151765,"results":"25","hashOfConfig":"16"},{"size":2786,"mtime":1612858762828,"results":"26","hashOfConfig":"16"},{"size":2913,"mtime":1612858791434,"results":"27","hashOfConfig":"16"},{"size":3259,"mtime":1612859768282,"results":"28","hashOfConfig":"16"},{"size":6558,"mtime":1612859284018,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"y538nm",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},"C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\index.js",[],["63","64"],"C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\App.js",[],"C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\components\\Navbar\\Navebar.js",[],"C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\components\\Button\\Button.js",[],["65","66"],"C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\components\\pages\\Home.js",[],"C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\components\\HeroSection\\HeroSection.js",[],"C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\components\\Cards\\Cards.js",[],"C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\components\\Cards\\CardItem.js",[],"C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\components\\pages\\Categories.js",[],"C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\components\\pages\\Posts.js",[],"C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\components\\Category\\CategoryList.js",["67"],"import React,{useState,useEffect} from 'react'\r\nimport Category from \"./Category\"\r\nimport \"./CategoryList.css\"\r\nimport axios from \"axios\"\r\n\r\n\r\n\r\n\r\nfunction CategoryList() {\r\n  const [categoryList, setCategoryList] = useState([])\r\n  //   const [recordForEdit, setRecordForEdit] = useState(null)\r\n\r\n  useEffect(() => {\r\n    refreshCategoryList();\r\n}, [])\r\n  const categoryAPI = (url = 'https://localhost:44384/api/Categories') => {\r\n        return {\r\n            fetchAll: () => axios.get(url),\r\n            create: newRecord => axios.post(url, newRecord),\r\n            update: (id, updatedRecord) => axios.put(url + id, updatedRecord),\r\n            delete: id => axios.delete(url + id)\r\n        }\r\n    }\r\n    \r\n  function refreshCategoryList() {\r\n      categoryAPI().fetchAll()\r\n          .then(res => {\r\n              setCategoryList(res.data)\r\n          })\r\n          .catch(err => console.log(err))\r\n  }\r\n    const addOrEdit = (formData, onSuccess) => {\r\n      categoryAPI().create(formData).then(res => {\r\n          onSuccess();\r\n          refreshCategoryList()\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n  const imageCard = data => (\r\n    <div className=\"card\" >\r\n        <div className=\"card-body\">\r\n            <h5>{data.categoryTitle}</h5>\r\n            <span>{data.details}</span> <br />\r\n            <span>{data.publishDate}</span> <br />\r\n            <button className=\"btn btn-light delete-button\" >\r\n                <i className=\"far fa-trash-alt\"></i>\r\n            </button>\r\n        </div>\r\n    </div>\r\n)\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n        <div className=\"jumbotron jumbotron-fluid py-4\">\r\n          <div className=\"container text-center\"></div>\r\n        <h1 className=\"display-4\">Category</h1>\r\n        </div>\r\n        </div>\r\n      <div className=\"col-md-4\">\r\n            <Category addOrEdit={addOrEdit}/>\r\n      </div>\r\n      <div className=\"col-md-8\">\r\n      <p className=\"lead text-center\">Category List</p>\r\n      <table>\r\n      <tbody>\r\n                        {\r\n                            //tr > 3 td\r\n                            [...Array(Math.ceil(categoryList.length / 3))].map((e, i) =>\r\n                                <tr key={i}>\r\n                                    <td>{imageCard(categoryList[3 * i])}</td>\r\n                                    <td>{categoryList[3 * i + 1] ? imageCard(categoryList[3 * i + 1]) : null}</td>\r\n                                    <td>{categoryList[3 * i + 2] ? imageCard(categoryList[3 * i + 2]) : null}</td>\r\n                                    \r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n        </table>\r\n      </div>\r\n  </div>\r\n    )\r\n}\r\n\r\nexport default CategoryList\r\n","C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\components\\Category\\Category.js",[],"C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\components\\Post\\PostList.js",["68"],"import React,{useState,useEffect} from 'react'\r\nimport Post from \"./Post\"\r\nimport \"./PostList.css\"\r\nimport axios from \"axios\"\r\nimport \"../../App.css\"\r\n\r\n\r\nfunction PostList() {\r\n    const [postList, setPostList] = useState([])\r\n    // const [recordForEdit, setRecordForEdit] = useState(null)\r\n\r\n    useEffect(() => {\r\n        refreshPostList();\r\n    }, [])\r\n    const postAPI = (url = 'https://localhost:44384/api/Posts') => {\r\n        return {\r\n            fetchAll: () => axios.get(url),\r\n            create: newRecord => axios.post(url, newRecord),\r\n            update: (id, updatedRecord) => axios.put(url + id, updatedRecord),\r\n            delete: id => axios.delete(url + id)\r\n        }\r\n    }\r\n   \r\n\r\n    function refreshPostList() {\r\n        postAPI().fetchAll()\r\n            .then(res => {\r\n                setPostList(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    const addOrEdit = (formData, onSuccess) => {\r\n        postAPI().create(formData).then(res => {\r\n            onSuccess();\r\n            refreshPostList()\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    const imageCard = data => (\r\n        <div className=\"card\" >\r\n            <img src={data.imageSrc} alt=\"post\" className=\"card-img-top \" />\r\n            <div className=\"card-body\">\r\n                <h5>{data.title}</h5>\r\n                <label htmlFor=\"description\">Description</label><br />\r\n                <span>{data.description}</span> <br />\r\n                <label htmlFor=\"postDate\">Date</label><br />\r\n                <span>{data.postDate}</span> <br />\r\n                <label htmlFor=\"categoryId\">category Title</label><br />\r\n                <span>{data.category.categoryTitle}</span> <br />\r\n                <label htmlFor=\"content\">Content</label><br />\r\n                <span>{data.content}</span> <br />\r\n                <button className=\"btn btn-light delete-button\" >\r\n                    <i className=\"far fa-trash-alt\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n        <div className=\"jumbotron jumbotron-fluid py-4\">\r\n          <div className=\"container text-center\"></div>\r\n        <h1 className=\"display-4\">Post</h1>\r\n        </div>\r\n        </div>\r\n      <div className=\"col-md-4\">\r\n            <Post addOrEdit={addOrEdit} />\r\n      </div>\r\n      <div className=\"col-md-8\">\r\n          <p className=\"lead text-center\">Post List</p>\r\n          <table>\r\n      <tbody>\r\n                        {\r\n                            //tr > 3 td\r\n                            [...Array(Math.ceil(postList.length / 1))].map((e, i) =>\r\n                                <tr key={i}>\r\n                                    <td>{imageCard(postList[1 * i])}</td>\r\n                                    {/* <td>{postList[1 * i + 1] ? imageCard(postList[1 * i + 1]) : null}</td> */}\r\n                                    {/* <td>{postList[2 * i + 2] ? imageCard(postList[2 * i + 2]) : null}</td> */}\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                    </table>\r\n      </div>\r\n  </div>\r\n    )\r\n}\r\n\r\nexport default PostList","C:\\Users\\Rami\\Desktop\\BlogApp\\Blog\\BlogFrontend\\blogfrontendapp\\src\\components\\Post\\Post.js",["69"],"import React, { useState,useEffect } from 'react'\r\nimport axios from \"axios\"\r\n\r\n\r\n\r\nconst defaultImageSrc = \"/img/default.jpg\"\r\nconst initialFieldValues = {\r\n    postId: 0,\r\n    title: \"\",\r\n    description: \"\",\r\n    postDate: new Date().toLocaleString(),\r\n    categoryId: 0,\r\n    content: \"\",\r\n    imageName: \"\",\r\n    imageSrc: defaultImageSrc,\r\n    imageFile: null,\r\n    category: [{}]\r\n    \r\n    \r\n    \r\n}\r\nfunction Post(props) {\r\n    \r\n    const { addOrEdit } = props\r\n    const [values, setValues] = useState(initialFieldValues)\r\n    const [errors, setErrors] = useState({})\r\n    const [categoryList, setCategoryList] = useState([])\r\n    //   const [recordForEdit, setRecordForEdit] = useState(null)\r\n  \r\n    useEffect(() => {\r\n      refreshCategoryList();\r\n  }, [])\r\n    const categoryAPI = (url = 'https://localhost:44384/api/Categories') => {\r\n          return {\r\n              fetchAll: () => axios.get(url),\r\n              \r\n          }\r\n      }\r\n      \r\n    function refreshCategoryList() {\r\n        categoryAPI().fetchAll()\r\n            .then(res => {\r\n                setCategoryList(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const showPreview = e => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            let imageFile = e.target.files[0];\r\n            const reader = new FileReader();\r\n            reader.onload = x => {\r\n                setValues({\r\n                    ...values,\r\n                    imageFile,\r\n                    imageSrc: x.target.result\r\n                })\r\n            }\r\n            reader.readAsDataURL(imageFile)\r\n        }\r\n        else{\r\n            setValues({\r\n                ...values,\r\n                imageFile: null,\r\n                imageSrc: defaultImageSrc\r\n            })\r\n        }\r\n    }\r\n\r\n    const validate =() => {\r\n        let temp= {}\r\n        temp.title = values.title ===\"\" ? false : true;\r\n        temp.description = values.description ===\"\" ? false : true;\r\n        temp.postDate = values.postDate === new Date().toLocaleString() ? false : true;\r\n        temp.content = values.content ===\"\" ? false : true;\r\n        temp.categoryId = values.categoryId === 0 ? false : true;\r\n        temp.imageSrc = values.imageSrc === defaultImageSrc ? false : true;\r\n        setErrors(temp)\r\n        return Object.values(temp).every(x => x === true)\r\n      }\r\n\r\n      const resetForm = () => {\r\n        setValues(initialFieldValues)\r\n        document.getElementById('image-uploader').value = null;\r\n        setErrors({})\r\n    }\r\n\r\n\r\n      const handleFormSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            const formData = new FormData()\r\n            formData.append('postId', values.postId)\r\n            formData.append('title', values.title)\r\n            formData.append('description', values.description)\r\n            formData.append('postDate', values.postDate.toLocaleString())\r\n            formData.append('categoryId', values.categoryId)\r\n            formData.append('content', values.content)\r\n            formData.append('imageName', values.imageName)\r\n            formData.append('imageFile', values.imageFile)\r\n            addOrEdit(formData, resetForm)\r\n        }\r\n      }\r\n      const applyErrorClass = field => ((field in errors && errors[field] === false) ? ' invalid-field' : '')\r\n    return (\r\n        <>\r\n            <div className=\"container text-center\">\r\n                \r\n                <p className=\"lead\"> Add Post</p>\r\n            </div>\r\n            <form autoComplete=\"off\" noValidate onSubmit={handleFormSubmit}>\r\n                <div className=\"card\">\r\n                    <img src={values.imageSrc} alt=\"postImage\" className=\"card-img-top\" />\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                            <input type=\"file\" accept=\"image/*\" className={\"form-control-file\" + applyErrorClass(\"imageSrc\")} \r\n                            onChange={showPreview} id=\"image-uploader\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"title\">Title</label>\r\n                            <input className={\"form-control\" + applyErrorClass(\"title\")} placeholder=\"Post Title\" name=\"title\" value={values.title} onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"description\">Description</label>\r\n                            <input className={\"form-control\" + applyErrorClass(\"description\")} placeholder=\"Description\" name=\"description\" value={values.description} onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"postDate\">Date</label>\r\n                            <input className={\"form-control\" + applyErrorClass(\"postDate\")} placeholder=\"Post Date\" name=\"postDate\" value={values.postDate} onChange={handleInputChange} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"categoryId\">Category Title</label>\r\n                            <select  className={\"form-control\" + applyErrorClass(\"categoryId\")} placeholder=\"category title\" name=\"categoryId\" onChange={handleInputChange}  >\r\n                                <option readOnly  value=\"0\">Choose Category</option>\r\n                                {categoryList.map(cat => <option key={cat.categoryId} value={cat.categoryId}>{cat.categoryTitle}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"Content\">Content</label>\r\n                            <textarea className={\"form-control\" + applyErrorClass(\"content\")} placeholder=\"Content\" name=\"content\" value={values.content} onChange={handleInputChange} rows=\"4\" cols=\"50\"></textarea>\r\n                        </div>\r\n                        <div className=\"form-group text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Post",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"70","replacedBy":"74"},{"ruleId":"72","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":15,"column":4,"nodeType":"78","endLine":15,"endColumn":6,"suggestions":"79"},{"ruleId":"76","severity":1,"message":"80","line":14,"column":8,"nodeType":"78","endLine":14,"endColumn":10,"suggestions":"81"},{"ruleId":"76","severity":1,"message":"77","line":32,"column":6,"nodeType":"78","endLine":32,"endColumn":8,"suggestions":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],["83"],["84"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refreshCategoryList'. Either include it or remove the dependency array.","ArrayExpression",["85"],"React Hook useEffect has a missing dependency: 'refreshPostList'. Either include it or remove the dependency array.",["86"],["87"],"no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},{"desc":"88","fix":"92"},"Update the dependencies array to be: [refreshCategoryList]",{"range":"93","text":"94"},"Update the dependencies array to be: [refreshPostList]",{"range":"95","text":"96"},{"range":"97","text":"94"},[349,351],"[refreshCategoryList]",[353,355],"[refreshPostList]",[767,769]]